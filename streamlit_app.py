import streamlit as st
import requests
import weaviate
from transformers import AutoTokenizer, pipeline
from weaviate.classes.init import Auth
from weaviate.classes.query import Rerank
import torch


def connect_to_db():
    headers = {
        "X-Cohere-Api-Key": st.secrets["COHERE_API_KEY"]
    }

    weaviate_url = st.secrets["veaviat_rest"]
    weaviate_api_key = st.secrets["weaviat_api_key"]

    client = weaviate.connect_to_weaviate_cloud(
        cluster_url=weaviate_url,
        auth_credentials=Auth.api_key(weaviate_api_key),
        headers=headers
    )
    return client


@st.cache_resource
def load_router():
    model_checkpoint = "EN3IMI/RouterAraBERT"
    tokenizer = AutoTokenizer.from_pretrained(model_checkpoint)
    classifier = pipeline("sentiment-analysis", model=model_checkpoint)
    return classifier

classifier = load_router()


def search_for_faq(user_query, client):
    collection = client.collections.use("FAQ")
    response = collection.query.hybrid(
        query=user_query,
        limit=10,
        alpha=0.40,
        rerank=Rerank(prop="content", query=user_query),
    )

    queries = []
    for idx, obj in enumerate(response.objects[:2]):
        message_to_router = f"{user_query} [SEP] {obj.properties['content']}"
        queries.append(message_to_router)

    return queries, response.objects[:3]

def search_for_laws(user_query, client):
    collection = client.collections.use("Laws")
    response = collection.query.hybrid(
        query=user_query,
        limit=10,
        alpha=0.40,
        rerank=Rerank(prop="text", query=user_query),
    )
    return response.objects[:3]


def router_decision(queries):
    results = classifier(queries)
    labels = [res['label'] for res in results]
    numeric_labels = [1 if label == 'LABEL_1' else 0 for label in labels]
    return any(numeric_labels)


def llm_response(query, docs, mode="faq"):
    chunks = []
    for i in docs:
        chunks.append(i.properties["content"] if mode=="faq" else i.properties["text"])

    API_KEY = st.secrets["perplixty_api"]
    ENDPOINT = "https://api.perplexity.ai/chat/completions"

    system_prompt = """
    You are an intelligent assistant specialized in Jordanian Land, Survey, and Legislation.
    Answer only from the provided context. If no relevant answer exists, reply in Arabic: "ŸÑÿß ÿ£ÿπŸÑŸÖ ÿßŸÑÿ¨Ÿàÿßÿ®".
    Be accurate, concise, and prioritize Arabic answers.
    """

    messages = [
        {"role": "system", "content": system_prompt},
        {"role": "user", "content": "Context:\n" + "\n".join(chunks) + "\n\nQuestion:\n" + query},
    ]

    data = {
        "model": "sonar-pro",
        "messages": messages,
        "max_tokens": 300,
        "temperature": 0.5,
    }

    resp = requests.post(
        ENDPOINT,
        headers={"Authorization": f"Bearer {API_KEY}", "Content-Type": "application/json"},
        json=data,
    )
    return resp.json()['choices'][0]['message']['content']


def IntelligentRAGSystem(query, client):
    faq_queries, faq_docs = search_for_faq(query, client)
    decision = router_decision(faq_queries)
    if decision:
        return llm_response(query, faq_docs, mode="faq")
    else:
        law_docs = search_for_laws(query, client)
        return llm_response(query, law_docs, mode="law")


'''import streamlit as st
from PIL import Image
import time

# ===== ÿ•ÿπÿØÿßÿØ ÿßŸÑÿµŸÅÿ≠ÿ© =====
st.set_page_config(
    page_title="ALIS - ŸÖÿ≥ÿßÿπÿØ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™ ÿßŸÑÿ£ÿ±ÿØŸÜŸä üáØüá¥", 
    layout="wide",
    initial_sidebar_state="expanded"
)

# ===== CSS ŸÖÿ≠ÿ≥ŸÜ ŸÑŸÑŸàÿßÿ¨Ÿáÿ© ÿßŸÑÿ≠ÿØŸäÿ´ÿ© =====
st.markdown("""
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&display=swap');
        
        * {
            direction: rtl;
            text-align: right;
        }
        
        .main {
            direction: rtl;
            text-align: right;
        }
        
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            font-family: 'Cairo', sans-serif;
            direction: rtl;
        }
        
        .stApp {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            direction: rtl;
        }
        
        /* Header Styling */
        .main-header {
            background: linear-gradient(135deg, #2c3e50, #34495e);
            padding: 2rem;
            border-radius: 15px;
            text-align: center;
            color: white;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .main-title {
            font-size: 2.5rem !important;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .main-subtitle {
            font-size: 1.2rem;
            opacity: 0.9;
            font-weight: 300;
        }
        
        /* Welcome Card */
        .welcome-card {
            background: linear-gradient(135deg, #ffffff, #f8f9fa);
            padding: 2rem;
            border-radius: 20px;
            text-align: center;
            margin: 2rem 0;
            box-shadow: 0 8px 25px rgba(0,0,0,0.08);
            border: 1px solid #e9ecef;
        }
        
        .welcome-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
        
        /* Input Section */
        .input-section {
            background: white;
            padding: 2rem;
            border-radius: 20px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.08);
            margin: 2rem 0;
            border: 1px solid #e9ecef;
        }
        
        .section-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 1.5rem;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        /* Answer Box */
        .answer-container {
            background: linear-gradient(135deg, #e8f5e8, #f0f8f0);
            padding: 2rem;
            border-radius: 20px;
            border-right: 5px solid #27ae60;
            margin: 2rem 0;
            box-shadow: 0 8px 25px rgba(0,0,0,0.08);
        }
        
        .answer-text {
            font-size: 1.1rem;
            line-height: 2;
            color: #2c3e50;
            font-weight: 400;
        }
        
        /* Buttons */
        .stButton > button {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            color: white;
            border: none;
            border-radius: 25px;
            padding: 0.75rem 2rem;
            font-size: 1.1rem;
            font-weight: 600;
            box-shadow: 0 5px 15px rgba(39, 174, 96, 0.3);
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .stButton > button:hover {
            background: linear-gradient(135deg, #219a52, #27ae60);
            transform: translateY(-2px);
            box-shadow: 0 7px 20px rgba(39, 174, 96, 0.4);
        }
        
        /* Text Area */
        .stTextArea textarea {
            border-radius: 15px;
            border: 2px solid #e9ecef;
            padding: 1rem;
            font-size: 1.1rem;
            font-family: 'Cairo', sans-serif;
            direction: rtl;
            text-align: right;
        }
        
        .stTextArea textarea:focus {
            border-color: #27ae60;
            box-shadow: 0 0 0 3px rgba(39, 174, 96, 0.1);
        }
        
        /* Sidebar */
        .css-1d391kg {
            background: linear-gradient(180deg, #2c3e50, #34495e);
        }
        
        /* Stats Cards */
        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            margin: 1rem 0;
            border-top: 4px solid #3498db;
        }
        
        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: #2c3e50;
        }
        
        .stat-label {
            color: #7f8c8d;
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }
        
        /* Footer */
        .footer {
            background: linear-gradient(135deg, #2c3e50, #34495e);
            color: white;
            text-align: center;
            padding: 2rem;
            border-radius: 15px;
            margin-top: 3rem;
        }
        
        /* Loading Animation */
        .loading-container {
            text-align: center;
            padding: 2rem;
        }
        
        /* Features Grid */
        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }
        
        .feature-card {
            background: white;
            padding: 1.5rem;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            transition: transform 0.3s ease;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.12);
        }
        
        .feature-icon {
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }
        
        /* Alerts */
        .stAlert {
            border-radius: 15px;
            border: none;
        }
        
        /* Success Message */
        .success-message {
            background: linear-gradient(135deg, #d4edda, #c3e6cb);
            color: #155724;
            padding: 1rem;
            border-radius: 15px;
            text-align: center;
            margin: 1rem 0;
            border-right: 4px solid #28a745;
        }
        
        /* Metrics */
        .stMetric {
            background: white;
            padding: 1rem;
            border-radius: 15px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        }
    </style>
""", unsafe_allow_html=True)

# ===== Sidebar =====
with st.sidebar:
    st.markdown("""
        <div style="text-align: center; padding: 2rem 1rem; color: white;">
            <h2 style="color: white;">ü§ñ ALIS</h2>
            <p style="color: #bdc3c7;">ŸÖÿ≥ÿßÿπÿØŸÉ ÿßŸÑŸÇÿßŸÜŸàŸÜŸä ÿßŸÑÿ∞ŸÉŸä</p>
        </div>
    """, unsafe_allow_html=True)
    
    st.markdown("### üìä ÿ•ÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ ÿ≥ÿ±Ÿäÿπÿ©")
    col1, col2 = st.columns(2)
    with col1:
        st.metric("ÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑŸäŸàŸÖ", "127", "12")
    with col2:
        st.metric("ŸÖÿπÿØŸÑ ÿßŸÑÿØŸÇÿ©", "95%", "2%")
    
    st.markdown("---")
    
    st.markdown("### üîß ÿ•ÿπÿØÿßÿØÿßÿ™")
    response_length = st.selectbox(
        "ÿ∑ŸàŸÑ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ©",
        ["ŸÇÿµŸäÿ±ÿ©", "ŸÖÿ™Ÿàÿ≥ÿ∑ÿ©", "ŸÖŸÅÿµŸÑÿ©"],
        index=1
    )
    
    include_sources = st.checkbox("ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑŸÖÿµÿßÿØÿ±", True)
    
    st.markdown("---")
    
    st.markdown("### üìû ÿ™ŸàÿßÿµŸÑ ŸÖÿπŸÜÿß")
    st.info("üìß support@alis.jo\nüì± +962-6-1234567")

# ===== ÿßŸÑÿµŸÅÿ≠ÿ© ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ© =====
# Header
st.markdown("""
    <div class="main-header">
        <div class="main-title">üáØüá¥ ALIS - ŸÖÿ≥ÿßÿπÿØ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™ ÿßŸÑÿ£ÿ±ÿØŸÜŸä</div>
        <div class="main-subtitle">ŸÜÿ∏ÿßŸÖ ÿ∞ŸÉŸä ŸÖÿ™ŸÇÿØŸÖ ŸÑŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿπŸÑŸâ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ŸÉŸÖ ÿßŸÑŸÇÿßŸÜŸàŸÜŸäÿ© ŸàÿßŸÑÿπŸÇÿßÿ±Ÿäÿ©</div>
    </div>
""", unsafe_allow_html=True)

# Welcome Section
st.markdown("""
    <div class="welcome-card">
        <div class="welcome-icon">üåü</div>
        <h3>ŸÖÿ±ÿ≠ÿ®ÿßŸã ÿ®ŸÉ ŸÅŸä ALIS</h3>
        <p>ŸÖÿ≥ÿßÿπÿØŸÉ ÿßŸÑÿ∞ŸÉŸä ÿßŸÑŸÖÿ™ÿÆÿµÿµ ŸÅŸä ÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™ ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿ© ŸàŸÇŸàÿßŸÜŸäŸÜ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä. ÿßÿ≠ÿµŸÑ ÿπŸÑŸâ ÿ•ÿ¨ÿßÿ®ÿßÿ™ ÿØŸÇŸäŸÇÿ© ŸàŸÖŸàÿ´ŸàŸÇÿ© ŸÑÿ¨ŸÖŸäÿπ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ŸÉ ÿßŸÑŸÇÿßŸÜŸàŸÜŸäÿ©.</p>
    </div>
""", unsafe_allow_html=True)

# Features Section
st.markdown("## ‚ú® ŸÖŸÖŸäÿ≤ÿßÿ™ŸÜÿß")
features_html = """
    <div class="features-grid">
        <div class="feature-card">
            <div class="feature-icon">‚ö°</div>
            <h4>ÿ≥ÿ±ÿπÿ© ŸÅÿßÿ¶ŸÇÿ©</h4>
            <p>ÿ•ÿ¨ÿßÿ®ÿßÿ™ ŸÅŸàÿ±Ÿäÿ© ÿπŸÑŸâ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ŸÉ</p>
        </div>
        <div class="feature-card">
            <div class="feature-icon">üéØ</div>
            <h4>ÿØŸÇÿ© ÿπÿßŸÑŸäÿ©</h4>
            <p>ŸÖÿπŸÑŸàŸÖÿßÿ™ ŸÖŸàÿ´ŸàŸÇÿ© ŸàŸÖÿ≠ÿØÿ´ÿ©</p>
        </div>
        <div class="feature-card">
            <div class="feature-icon">üîí</div>
            <h4>ÿ¢ŸÖŸÜ ŸàŸÖÿ≠ŸÖŸä</h4>
            <p>ÿ≠ŸÖÿßŸäÿ© ŸÉÿßŸÖŸÑÿ© ŸÑÿ®ŸäÿßŸÜÿßÿ™ŸÉ</p>
        </div>
        <div class="feature-card">
            <div class="feature-icon">üìö</div>
            <h4>ÿ¥ÿßŸÖŸÑ ŸàŸÖÿ™ŸÉÿßŸÖŸÑ</h4>
            <p>ÿ™ÿ∫ÿ∑Ÿäÿ© ÿ¨ŸÖŸäÿπ ÿßŸÑŸÇŸàÿßŸÜŸäŸÜ ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿ©</p>
        </div>
    </div>
"""
st.markdown(features_html, unsafe_allow_html=True)

# Input Section
st.markdown("""
    <div class="input-section">
        <div class="section-title">
            ‚úçÔ∏è ÿßÿ∑ÿ±ÿ≠ ÿ≥ÿ§ÿßŸÑŸÉ ŸáŸÜÿß
        </div>
""", unsafe_allow_html=True)

# Tabs for different question types
tab1, tab2, tab3 = st.tabs(["üíº ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿπÿßŸÖÿ©", "üèòÔ∏è ŸÇŸàÿßŸÜŸäŸÜ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä", "‚öñÔ∏è ÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™"])

with tab1:
    st.markdown("### ÿßÿ∑ÿ±ÿ≠ ÿ£Ÿä ÿ≥ÿ§ÿßŸÑ ŸÇÿßŸÜŸàŸÜŸä")
    query = st.text_area(
        "",
        height=120,
        placeholder="ŸÖÿ´ÿßŸÑ: ŸÖÿß ŸáŸä ÿßŸÑÿ•ÿ¨ÿ±ÿßÿ°ÿßÿ™ ÿßŸÑŸÑÿßÿ≤ŸÖÿ© ŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ŸÇÿ∑ÿπÿ© ÿ£ÿ±ÿ∂ ŸÅŸä ÿßŸÑÿ£ÿ±ÿØŸÜÿü",
        key="general_query"
    )

with tab2:
    st.markdown("### ÿ£ÿ≥ÿ¶ŸÑÿ© ŸÖÿ™ÿÆÿµÿµÿ© ŸÅŸä ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä")
    query = st.text_area(
        "",
        height=120,
        placeholder="ŸÖÿ´ÿßŸÑ: ŸÖÿß ŸáŸä ÿ±ÿ≥ŸàŸÖ ÿ™ÿ≠ŸàŸäŸÑ ŸÖŸÑŸÉŸäÿ© ŸÇÿ∑ÿπÿ© ÿ£ÿ±ÿ∂ÿü",
        key="land_query"
    )

with tab3:
    st.markdown("### ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™")
    query = st.text_area(
        "",
        height=120,
        placeholder="ŸÖÿ´ÿßŸÑ: ŸÖÿß ŸáŸä ÿßŸÑŸÇŸàÿßŸÜŸäŸÜ ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ© ÿ®ÿßŸÑÿ•ÿ±ÿ´ ŸÅŸä ÿßŸÑÿ£ÿ±ÿØŸÜÿü",
        key="law_query"
    )

st.markdown("</div>", unsafe_allow_html=True)

# Quick Questions
st.markdown("### üöÄ ÿ£ÿ≥ÿ¶ŸÑÿ© ÿ≥ÿ±Ÿäÿπÿ©")
col1, col2, col3, col4 = st.columns(4)

with col1:
    if st.button("ÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ"):
        query = "ŸÖÿß ŸáŸä ÿ±ÿ≥ŸàŸÖ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸÅŸä ÿßŸÑÿ£ÿ±ÿØŸÜÿü"

with col2:
    if st.button("ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿ®Ÿäÿπ"):
        query = "ŸÖÿß ŸáŸä ÿ¥ÿ±Ÿàÿ∑ ÿ®Ÿäÿπ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿäÿü"

with col3:
    if st.button("ÿßŸÑÿ•ÿ±ÿ´"):
        query = "ŸÉŸäŸÅ Ÿäÿ™ŸÖ ÿ™Ÿàÿ≤Ÿäÿπ ÿßŸÑÿ•ÿ±ÿ´ ÿ≠ÿ≥ÿ® ÿßŸÑŸÇÿßŸÜŸàŸÜ ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿü"

with col4:
    if st.button("ÿßŸÑÿ™ÿ£ŸÖŸäŸÜ"):
        query = "ŸÖÿß ŸáŸà ÿßŸÑÿ™ÿ£ŸÖŸäŸÜ ÿßŸÑÿπŸÇÿßÿ±Ÿä ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿü"

# Send Button
col1, col2, col3 = st.columns([1, 2, 1])
with col2:
    send = st.button("üöÄ ÿßÿ≠ÿµŸÑ ÿπŸÑŸâ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ©", type="primary")

# Processing
if send:
    if not query.strip():
        st.warning("‚ö†Ô∏è ÿßŸÑÿ±ÿ¨ÿßÿ° ÿ•ÿØÿÆÿßŸÑ ÿ≥ÿ§ÿßŸÑ ŸÇÿ®ŸÑ ÿßŸÑÿ•ÿ±ÿ≥ÿßŸÑ")
    else:
        # Loading animation
        with st.spinner("üîç ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸÇÿßŸÜŸàŸÜŸäÿ©..."):
            progress_bar = st.progress(0)
            for i in range(100):
                time.sleep(0.02)
                progress_bar.progress(i + 1)
            
            try:
                # Simulated response - replace with your actual function
                # client = connect_to_db()
                # answer = IntelligentRAGSystem(query, client)
                # client.close()
                
                # Simulated answer for demonstration
                answer = """
                ÿ®ŸÜÿßÿ°Ÿã ÿπŸÑŸâ ÿßŸÑŸÇŸàÿßŸÜŸäŸÜ ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿ© ÿßŸÑÿ≠ÿßŸÑŸäÿ©ÿå ÿ•ŸÑŸäŸÉ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿßŸÑÿ™ŸÅÿµŸäŸÑŸäÿ©:

                **ÿßŸÑÿ•ÿ¨ÿ±ÿßÿ°ÿßÿ™ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ©:**
                1. ÿ™ÿ≠ÿ∂Ÿäÿ± ÿßŸÑŸàÿ´ÿßÿ¶ŸÇ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© (ÿ≥ŸÜÿØ ÿßŸÑŸÖŸÑŸÉŸäÿ©ÿå ŸáŸàŸäÿ© ŸÖÿØŸÜŸäÿ©)
                2. ÿØŸÅÿπ ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑŸÖŸÇÿ±ÿ±ÿ© ŸÅŸä ÿØÿßÿ¶ÿ±ÿ© ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä
                3. ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÖŸàÿßŸÅŸÇÿ© ÿßŸÑÿ®ŸÑÿØŸäÿ© ÿ•ÿ∞ÿß ŸÑÿ≤ŸÖ ÿßŸÑÿ£ŸÖÿ±
                4. ÿ•ÿ™ŸÖÿßŸÖ ÿπŸÖŸÑŸäÿ© ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑŸÜŸáÿßÿ¶Ÿä

                **ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ©:**
                - ÿ±ÿ≥ŸÖ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ: 0.5% ŸÖŸÜ ŸÇŸäŸÖÿ© ÿßŸÑÿπŸÇÿßÿ±
                - ÿ±ÿ≥ŸÖ ÿßŸÑÿ∑ÿßÿ®ÿπ: 15 ÿØŸäŸÜÿßÿ± ÿ£ÿ±ÿØŸÜŸä
                - ÿ±ÿ≥ŸàŸÖ ÿ•ÿ∂ÿßŸÅŸäÿ© ÿ≠ÿ≥ÿ® ÿßŸÑŸÖŸÜÿ∑ŸÇÿ©

                **ŸÖŸÑÿßÿ≠ÿ∏ÿßÿ™ ŸáÿßŸÖÿ©:**
                - Ÿäÿ¨ÿ® ÿ£ŸÜ ÿ™ŸÉŸàŸÜ ÿ¨ŸÖŸäÿπ ÿßŸÑŸàÿ´ÿßÿ¶ŸÇ ÿ≥ÿßÿ±Ÿäÿ© ÿßŸÑŸÖŸÅÿπŸàŸÑ
                - ŸÇÿØ ÿ™ÿÆÿ™ŸÑŸÅ ÿßŸÑÿ•ÿ¨ÿ±ÿßÿ°ÿßÿ™ ÿ≠ÿ≥ÿ® ŸÜŸàÿπ ÿßŸÑÿ£ÿ±ÿ∂ ŸàŸÖŸÜÿ∑ŸÇÿ™Ÿáÿß
                """
                
                st.markdown('<div class="success-message">‚úÖ ÿ™ŸÖ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿ®ŸÜÿ¨ÿßÿ≠!</div>', unsafe_allow_html=True)
                
                st.markdown(f"""
                    <div class="answer-container">
                        <div class="answer-text">{answer}</div>
                    </div>
                """, unsafe_allow_html=True)
                
                # Show sources if enabled
                if include_sources:
                    st.markdown("### üìö ÿßŸÑŸÖÿµÿßÿØÿ±")
                    with st.expander("ÿßÿ∂ÿ∫ÿ∑ ŸÑÿπÿ±ÿ∂ ÿßŸÑŸÖÿµÿßÿØÿ±"):
                        st.markdown("""
                        - ŸÇÿßŸÜŸàŸÜ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ÿßŸÑÿ£ÿ±ÿØŸÜŸä ÿ±ŸÇŸÖ 40 ŸÑÿ≥ŸÜÿ© 1952
                        - ÿ™ÿπŸÑŸäŸÖÿßÿ™ ÿØÿßÿ¶ÿ±ÿ© ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑŸÖÿ≥ÿßÿ≠ÿ©
                        - ÿßŸÑŸÜÿ¥ÿ±ÿßÿ™ ÿßŸÑÿ±ÿ≥ŸÖŸäÿ© ŸÑŸàÿ≤ÿßÿ±ÿ© ÿßŸÑÿπÿØŸÑ
                        """)
                
                # Rating section
                st.markdown("### üìù ÿ™ŸÇŸäŸäŸÖ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ©")
                col1, col2, col3, col4, col5 = st.columns(5)
                with col1:
                    st.button("‚≠ê")
                with col2:
                    st.button("‚≠ê‚≠ê")
                with col3:
                    st.button("‚≠ê‚≠ê‚≠ê")
                with col4:
                    st.button("‚≠ê‚≠ê‚≠ê‚≠ê")
                with col5:
                    st.button("‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê")
                    
            except Exception as e:
                st.error(f"‚ùå ÿπÿ∞ÿ±ÿßŸãÿå ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ≥ÿ§ÿßŸÑ: {e}")

# Footer
st.markdown("""
    <div class="footer">
        <h4>üáØüá¥ ALIS - ŸÖÿ≥ÿßÿπÿØ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™ ÿßŸÑÿ£ÿ±ÿØŸÜŸä</h4>
        <p>ÿ™ŸÖ ÿ™ÿ∑ŸàŸäÿ±Ÿá ÿ®Ÿàÿßÿ≥ÿ∑ÿ© ŸÅÿ±ŸäŸÇ ALIS | ÿ¨ŸÖŸäÿπ ÿßŸÑÿ≠ŸÇŸàŸÇ ŸÖÿ≠ŸÅŸàÿ∏ÿ© ¬© 2024</p>
        <p>üìß info@alis.jo | üì± +962-6-1234567 | üåê www.alis.jo</p>
    </div>
""", unsafe_allow_html=True)
'''
import streamlit as st
from PIL import Image

# ===== ÿ•ÿπÿØÿßÿØ ÿßŸÑÿµŸÅÿ≠ÿ© =====
st.set_page_config(
    page_title="ALIS - Jordan RAG Assistant üáØüá¥", 
    layout="wide",
    initial_sidebar_state="expanded",
    page_icon="‚öñÔ∏è"
)

# ===== CSS ŸÖÿÆÿµÿµ ŸÑÿ™ÿ¨ŸÖŸäŸÑ ÿßŸÑŸàÿßÿ¨Ÿáÿ© =====
st.markdown("""
    <style>
        /* ÿ™ŸÜÿ≥ŸäŸÇ ÿπÿßŸÖ */
        * {
            direction: rtl;
            text-align: right;
        }
        
        body {
            background-color: #f8fafc;
            font-family: "Segoe UI", "Tahoma", "Arial", sans-serif;
        }
        
        /* ÿ±ÿ£ÿ≥ ÿßŸÑÿµŸÅÿ≠ÿ© */
        .header {
            background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
            color: white;
            padding: 2rem 1rem;
            border-radius: 0 0 20px 20px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }
        
        .title-text {
            font-size: 2.2rem !important;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        
        .subtitle-text {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 0;
        }
        
        /* ÿ®ÿ∑ÿßŸÇÿ© ÿßŸÑÿ™ÿ±ÿ≠Ÿäÿ® */
        .welcome-card {
            background: linear-gradient(135deg, #ffffff 0%, #f0f7ff 100%);
            padding: 2rem;
            border-radius: 16px;
            text-align: center;
            margin-bottom: 2rem;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
            border: 1px solid #e1e8f0;
        }
        
        /* ÿ≠ÿßŸàŸäÿ© ÿßŸÑÿ•ÿØÿÆÿßŸÑ */
        .input-container {
            background-color: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            margin-bottom: 1.5rem;
            border: 1px solid #e1e8f0;
        }
        
        /* ŸÖÿ±ÿ®ÿπ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© */
        .answer-card {
            background: linear-gradient(135deg, #f0f9ff 0%, #e6f3ff 100%);
            padding: 1.8rem;
            border-radius: 12px;
            line-height: 1.8;
            font-size: 1.1rem;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
            border-right: 4px solid #3b82f6;
            margin-top: 1.5rem;
        }
        
        /* ÿ≤ÿ± ÿßŸÑÿ•ÿ±ÿ≥ÿßŸÑ */
        .stButton button {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
            border-radius: 10px;
            padding: 12px 30px;
            font-size: 1.1rem;
            font-weight: 600;
            border: none;
            width: 100%;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(16, 185, 129, 0.2);
        }
        
        .stButton button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(16, 185, 129, 0.3);
        }
        
        /* ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ¨ÿßŸÜÿ®Ÿä */
        .sidebar .sidebar-content {
            background: linear-gradient(180deg, #1e293b 0%, #334155 100%);
        }
        
        /* ÿπŸÑÿßŸÖÿßÿ™ ÿßŸÑÿ™ÿ®ŸàŸäÿ® */
        .stTabs [data-baseweb="tab-list"] {
            gap: 8px;
        }
        
        .stTabs [data-baseweb="tab"] {
            background-color: #f1f5f9;
            border-radius: 8px 8px 0 0;
            padding: 12px 24px;
            font-weight: 600;
        }
        
        .stTabs [aria-selected="true"] {
            background-color: #3b82f6;
            color: white;
        }
        
        /* ÿ™ÿ∞ŸäŸäŸÑ ÿßŸÑÿµŸÅÿ≠ÿ© */
        .footer {
            text-align: center;
            color: #64748b;
            margin-top: 3rem;
            padding: 1.5rem;
            font-size: 0.9rem;
            border-top: 1px solid #e2e8f0;
        }
        
        /* ŸÖÿ§ÿ¥ÿ± ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ */
        .stSpinner > div {
            border: 3px solid #f3f4f6;
            border-radius: 50%;
            border-top: 3px solid #3b82f6;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* ÿ™ÿ≠ÿ≥ŸäŸÜÿßÿ™ ŸÑŸÑŸÜÿµŸàÿµ */
        h1, h2, h3 {
            color: #1e293b;
        }
        
        /* ÿ™ÿ≠ÿ≥ŸäŸÜÿßÿ™ ŸÑŸÑÿ±ÿ≥ÿßÿ¶ŸÑ */
        .stAlert {
            border-radius: 10px;
        }
        
        /* ÿ£ŸäŸÇŸàŸÜÿßÿ™ */
        .icon {
            font-size: 1.5rem;
            margin-left: 10px;
        }
    </style>
""", unsafe_allow_html=True)

# ===== ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ¨ÿßŸÜÿ®Ÿä =====
with st.sidebar:
    st.markdown("<div style='text-align:center; margin-bottom:2rem;'>", unsafe_allow_html=True)
    st.image("https://upload.wikimedia.org/wikipedia/commons/8/89/Scale_of_justice.png", width=80)
    st.markdown("</div>", unsafe_allow_html=True)
    
    st.markdown("### ‚öôÔ∏è ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™")
    
    # ÿÆŸäÿßÿ±ÿßÿ™ ŸÑŸÑŸÜÿ∏ÿßŸÖ
    model_type = st.selectbox(
        "ŸÜŸàÿπ ÿßŸÑŸÜŸÖŸàÿ∞ÿ¨:",
        ["ÿßŸÑŸÜŸÖŸàÿ∞ÿ¨ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿä", "ŸÜŸÖŸàÿ∞ÿ¨ ŸÖÿ™ŸÇÿØŸÖ", "ŸÜŸÖŸàÿ∞ÿ¨ ÿ≥ÿ±Ÿäÿπ"]
    )
    
    detail_level = st.selectbox(
        "ŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿ™ŸÅÿßÿµŸäŸÑ:",
        ["ŸÖÿÆÿ™ÿµÿ±", "ŸÖÿ™Ÿàÿ≥ÿ∑", "ŸÖŸÅÿµŸÑ"]
    )
    
    st.markdown("---")
    st.markdown("### üìä ÿ•ÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ ÿßŸÑŸÜÿ∏ÿßŸÖ")
    
    # ÿ•ÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ ŸàŸáŸÖŸäÿ©
    col1, col2 = st.columns(2)
    with col1:
        st.metric("ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖÿßÿ™ ÿßŸÑŸäŸàŸÖŸäÿ©", "24")
        st.metric("ŸÖÿπÿØŸÑ ÿßŸÑÿØŸÇÿ©", "94%")
    
    with col2:
        st.metric("ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖÿßÿ™ ÿßŸÑÿ¥Ÿáÿ±Ÿäÿ©", "720")
        st.metric("ŸàŸÇÿ™ ÿßŸÑÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿ©", "1.2s")
    
    st.markdown("---")
    st.markdown("### ‚ÑπÔ∏è ÿ≠ŸàŸÑ ÿßŸÑŸÜÿ∏ÿßŸÖ")
    st.info("""
    ALIS ŸáŸà ŸÖÿ≥ÿßÿπÿØ ÿ∞ŸÉŸä Ÿäÿ≥ÿ™ÿÆÿØŸÖ ÿ™ŸÇŸÜŸäÿ© RAG 
    ŸÑŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿπŸÑŸâ ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ© ÿ®ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä 
    ŸàÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™ ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿ©.
    """)

# ===== ÿ±ÿ£ÿ≥ ÿßŸÑÿµŸÅÿ≠ÿ© =====
st.markdown("""
    <div class="header">
        <div style="display:flex; align-items:center; justify-content:space-between;">
            <div>
                <div class="title-text">ü§ñ ALIS - Jordan RAG Assistant</div>
                <div class="subtitle-text">ŸÜÿ∏ÿßŸÖ ÿ∞ŸÉŸä ŸÑŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿπŸÑŸâ ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ© ÿ®ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™ ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿ©</div>
            </div>
            <div style="font-size:2rem;">üáØüá¥</div>
        </div>
    </div>
""", unsafe_allow_html=True)

# ===== ÿπŸÑÿßŸÖÿßÿ™ ÿßŸÑÿ™ÿ®ŸàŸäÿ® =====
tab1, tab2, tab3 = st.tabs(["üè† ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©", "üìö ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑÿ¥ÿßÿ¶ÿπÿ©", "‚ÑπÔ∏è ŸÖÿπŸÑŸàŸÖÿßÿ™"])

with tab1:
    # ===== ÿ®ÿ∑ÿßŸÇÿ© ÿßŸÑÿ™ÿ±ÿ≠Ÿäÿ® =====
    st.markdown("""
    <div class="welcome-card">
        <h2 style="margin-top:0;">üëã ÿ£ŸáŸÑÿßŸã Ÿàÿ≥ŸáŸÑÿßŸã ÿ®ŸÉ ŸÅŸä <span style="color:#3b82f6;">ALIS</span></h2>
        <p style="font-size:1.2rem; margin-bottom:1.5rem;">ŸÖÿ≥ÿßÿπÿØŸÉ ÿßŸÑÿ∞ŸÉŸä ŸÑŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿπŸÑŸâ ÿ£ÿ≥ÿ¶ŸÑÿ™ŸÉ ÿ≠ŸàŸÑ ÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™ ŸàÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿ©</p>
        <div style="display:flex; justify-content:center; gap:1rem; flex-wrap:wrap;">
            <span style="background:#e0f2fe; color:#0369a1; padding:6px 12px; border-radius:20px;">‚öñÔ∏è ÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™</span>
            <span style="background:#dcfce7; color#166534; padding:6px 12px; border-radius:20px;">üèûÔ∏è ÿ£ÿ±ÿßÿ∂Ÿä</span>
            <span style="background:#fef3c7; color#92400e; padding:6px 12px; border-radius:20px;">üìÑ Ÿàÿ´ÿßÿ¶ŸÇ</span>
            <span style="background:#f3e8ff; color#6b21a8; padding:6px 12px; border-radius:20px;">üîç ÿ®ÿ≠ÿ´</span>
        </div>
    </div>
    """, unsafe_allow_html=True)

    # ===== ÿ≠ÿßŸàŸäÿ© ÿßŸÑÿ•ÿØÿÆÿßŸÑ =====
    st.markdown("<div class='input-container'>", unsafe_allow_html=True)
    st.markdown("### ‚úçÔ∏è ÿ£ÿØÿÆŸÑ ÿ≥ÿ§ÿßŸÑŸÉ:")
    
    query = st.text_area(
        " ",
        height=140,
        placeholder="ŸÖÿ´ÿßŸÑ: ŸÖÿß ŸáŸä ÿ±ÿ≥ŸàŸÖ ÿ™ÿ≥ÿ¨ŸäŸÑ ŸÇÿ∑ÿπÿ© ÿ£ÿ±ÿ∂ÿü ÿ£Ÿà ŸÖÿß ŸáŸä ÿ•ÿ¨ÿ±ÿßÿ°ÿßÿ™ ŸÜŸÇŸÑ ŸÖŸÑŸÉŸäÿ© ÿßŸÑÿπŸÇÿßÿ±ÿü",
        key="query_input"
    )
    
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        send = st.button("üöÄ ÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑÿ≥ÿ§ÿßŸÑ", use_container_width=True)
    
    st.markdown("</div>", unsafe_allow_html=True)

    # ===== ÿßŸÑŸÖÿπÿßŸÑÿ¨ÿ© =====
    if send:
        if not query.strip():
            st.warning("‚ö†Ô∏è ÿßŸÑÿ±ÿ¨ÿßÿ° ÿ•ÿØÿÆÿßŸÑ ÿ≥ÿ§ÿßŸÑ ŸÇÿ®ŸÑ ÿßŸÑÿ•ÿ±ÿ≥ÿßŸÑ.")
        else:
            with st.spinner("üîç ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ©ÿå ÿßŸÑÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ±..."):
                try:
                    # Ÿáÿ∞Ÿá ÿßŸÑÿØŸàÿßŸÑ ÿ™ÿ≠ÿ™ÿßÿ¨ ÿ•ŸÑŸâ ÿ™ŸÜŸÅŸäÿ∞Ÿáÿß ÿ≠ÿ≥ÿ® ŸÜÿ∏ÿßŸÖŸÉ
                    # client = connect_to_db()
                    # answer = IntelligentRAGSystem(query, client)
                    # client.close()
                    
                    # ŸÜŸÖŸàÿ∞ÿ¨ ÿ•ÿ¨ÿßÿ®ÿ© ŸàŸáŸÖŸäÿ© ŸÑŸÑÿπÿ±ÿ∂
                    answer = """
                    ŸàŸÅŸÇÿßŸã ŸÑŸÑŸÖÿßÿØÿ© 25 ŸÖŸÜ ŸÇÿßŸÜŸàŸÜ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿå ŸÅÿ•ŸÜ ÿ±ÿ≥ŸàŸÖ ÿ™ÿ≥ÿ¨ŸäŸÑ ŸÇÿ∑ÿπÿ© ÿ£ÿ±ÿ∂ ÿ™Ÿèÿ≠ÿØÿØ ÿ®ŸÜÿßÿ°Ÿã ÿπŸÑŸâ:
                    
                    1. ŸÖÿ≥ÿßÿ≠ÿ© ÿßŸÑÿ£ÿ±ÿ∂: 0.5% ŸÖŸÜ ŸÇŸäŸÖÿ© ÿßŸÑÿ£ÿ±ÿ∂ ŸÑŸÑŸÖÿ≥ÿßÿ≠ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ŸÇŸÑ ÿπŸÜ 1000 ŸÖÿ™ÿ± ŸÖÿ±ÿ®ÿπ.
                    2. ŸÖŸàŸÇÿπ ÿßŸÑÿ£ÿ±ÿ∂: ÿ™ÿÆÿ™ŸÑŸÅ ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿ®ŸäŸÜ ÿßŸÑŸÖŸÜÿßÿ∑ŸÇ ÿ≠ÿ≥ÿ® ÿßŸÑÿ™ÿµŸÜŸäŸÅ.
                    3. ŸÜŸàÿπ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ: ÿ≥ŸÉŸÜŸäÿå ÿ™ÿ¨ÿßÿ±Ÿäÿå ÿ≤ÿ±ÿßÿπŸä.
                    
                    Ÿäÿ¨ÿ® ÿ™ŸÇÿØŸäŸÖ ÿßŸÑÿ∑ŸÑÿ® ÿ•ŸÑŸâ ÿØÿßÿ¶ÿ±ÿ© ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑŸÖÿ≥ÿßÿ≠ÿ© ŸÅŸä ÿßŸÑŸÖŸÜÿ∑ŸÇÿ© ÿßŸÑÿ™ÿßÿ®ÿπÿ© ŸÑŸáÿß ÿßŸÑÿ£ÿ±ÿ∂ÿå 
                    ŸÖÿπ ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© ÿ®ŸÖÿß ŸÅŸä ÿ∞ŸÑŸÉ ÿµŸÉ ÿßŸÑŸÖŸÑŸÉŸäÿ© ŸàÿßŸÑŸáŸàŸäÿ© ÿßŸÑÿ¥ÿÆÿµŸäÿ©.
                    
                    ŸÑŸÖÿ≤ŸäÿØ ŸÖŸÜ ÿßŸÑÿ™ŸÅÿßÿµŸäŸÑÿå ŸäŸÖŸÉŸÜŸÉ ÿ≤Ÿäÿßÿ±ÿ© ÿßŸÑŸÖŸàŸÇÿπ ÿßŸÑÿ±ÿ≥ŸÖŸä ŸÑÿØÿßÿ¶ÿ±ÿ© ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑŸÖÿ≥ÿßÿ≠ÿ© ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿ©.
                    """
                    
                    st.success("‚úÖ ÿ™ŸÖ ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ©:")
                    st.markdown(f"<div class='answer-card'>{answer}</div>", unsafe_allow_html=True)
                    
                    # ŸÇÿ≥ŸÖ ÿßŸÑÿ™ŸÇŸäŸäŸÖ
                    st.markdown("---")
                    st.markdown("#### üìä ŸÉŸäŸÅ ŸÉÿßŸÜÿ™ ÿ™ÿ¨ÿ±ÿ®ÿ™ŸÉ ŸÖÿπ Ÿáÿ∞Ÿá ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ©ÿü")
                    
                    col1, col2, col3 = st.columns(3)
                    with col1:
                        if st.button("üëç ŸÖŸÅŸäÿØÿ©", use_container_width=True):
                            st.success("ÿ¥ŸÉÿ±ÿßŸã ŸÑÿ™ŸÇŸäŸäŸÖŸÉ!")
                    with col2:
                        if st.button("üëé ÿ∫Ÿäÿ± ŸÖŸÅŸäÿØÿ©", use_container_width=True):
                            st.info("ÿ¥ŸÉÿ±ÿßŸã ŸÑŸÑŸÖŸÑÿßÿ≠ÿ∏ÿ©ÿå ÿ≥ŸÜÿπŸÖŸÑ ÿπŸÑŸâ ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿßÿ™.")
                    with col3:
                        if st.button("üìã ŸÜÿ≥ÿÆ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ©", use_container_width=True):
                            st.info("ÿ™ŸÖ ŸÜÿ≥ÿÆ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿ•ŸÑŸâ ÿßŸÑÿ≠ÿßŸÅÿ∏ÿ©")
                    
                except Exception as e:
                    st.error(f"ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ŸÖÿπÿßŸÑÿ¨ÿ© ÿ≥ÿ§ÿßŸÑŸÉ: {e}")

with tab2:
    st.markdown("### üìö ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑÿ¥ÿßÿ¶ÿπÿ©")
    
    # ÿ™ŸÜÿ∏ŸäŸÖ ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑÿ¥ÿßÿ¶ÿπÿ© ŸÅŸä ÿ£ŸÉŸàÿ±ÿØŸäŸàŸÜ
    with st.expander("ŸÖÿß ŸáŸä ÿ•ÿ¨ÿ±ÿßÿ°ÿßÿ™ ÿ™ÿ≥ÿ¨ŸäŸÑ ŸÇÿ∑ÿπÿ© ÿ£ÿ±ÿ∂ ÿ¨ÿØŸäÿØÿ©ÿü", expanded=False):
        st.markdown("""
        - ÿ™ŸÇÿØŸäŸÖ ÿ∑ŸÑÿ® ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿ•ŸÑŸâ ÿØÿßÿ¶ÿ±ÿ© ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑŸÖÿ≥ÿßÿ≠ÿ©
        - ÿ•ÿ±ŸÅÿßŸÇ ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© (ÿµŸÉ ÿßŸÑŸÖŸÑŸÉŸäÿ©ÿå ÿßŸÑŸáŸàŸäÿ© ÿßŸÑÿ¥ÿÆÿµŸäÿ©)
        - ÿØŸÅÿπ ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑŸÖŸÇÿ±ÿ±ÿ©
        - ÿßŸÜÿ™ÿ∏ÿßÿ± ÿßŸÑŸÅÿ≠ÿµ ÿßŸÑŸÖŸäÿØÿßŸÜŸä ŸÖŸÜ ŸÇÿ®ŸÑ ÿßŸÑŸÖŸáŸÜÿØÿ≥ ÿßŸÑŸÖÿ≥ÿ§ŸàŸÑ
        - ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿ≥ŸÜÿØ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑŸÜŸáÿßÿ¶Ÿä
        """)
    
    with st.expander("ŸÖÿß ŸáŸä ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© ŸÑŸÜŸÇŸÑ ŸÖŸÑŸÉŸäÿ© ÿπŸÇÿßÿ±ÿü"):
        st.markdown("""
        - ÿ≥ŸÜÿØ ÿßŸÑŸÖŸÑŸÉŸäÿ© ÿßŸÑÿ£ÿµŸÑŸä
        - ŸáŸàŸäÿ© ÿßŸÑÿ®ÿßÿ¶ÿπ ŸàÿßŸÑŸÖÿ¥ÿ™ÿ±Ÿä
        - ÿπŸÇÿØ ÿßŸÑÿ®Ÿäÿπ ÿßŸÑŸÖŸàŸÇÿπ ŸÖŸÜ ÿßŸÑÿ∑ÿ±ŸÅŸäŸÜ
        - ÿ¥ŸáÿßÿØÿ© ÿπÿØŸÖ ÿßŸÑŸÖŸÖÿßŸÜÿπÿ© ŸÖŸÜ ÿßŸÑÿØÿßÿ¶ÿ±ÿ© ÿßŸÑÿ®ŸÑÿØŸäÿ©
        - ÿ¥ŸáÿßÿØÿ© ÿπÿØŸÖ Ÿàÿ¨ŸàÿØ ÿØŸäŸàŸÜ ÿ®ŸÑÿØŸäÿ©
        """)
    
    with st.expander("ŸÉŸäŸÅ ŸäŸÖŸÉŸÜŸÜŸä ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿπŸÜ ŸÖÿÆÿ∑ÿ∑ÿßÿ™ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿäÿü"):
        st.markdown("""
        - ÿ≤Ÿäÿßÿ±ÿ© ŸÖŸàŸÇÿπ ÿØÿßÿ¶ÿ±ÿ© ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑŸÖÿ≥ÿßÿ≠ÿ© ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä
        - ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿÆÿØŸÖÿ© ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿπŸÜ ÿßŸÑŸÖÿÆÿ∑ÿ∑ÿßÿ™
        - ÿ•ÿØÿÆÿßŸÑ ÿ±ŸÇŸÖ ÿßŸÑŸÇÿ∑ÿπÿ© ŸàÿßŸÑŸÖÿ≠ÿßŸÅÿ∏ÿ©
        - ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ©
        """)
    
    with st.expander("ŸÖÿß ŸáŸä ÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ŸÑŸÑÿπŸÇÿßÿ±ÿßÿ™ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿäÿ©ÿü"):
        st.markdown("""
        ÿ™ÿÆÿ™ŸÑŸÅ ÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ŸÑŸÑÿπŸÇÿßÿ±ÿßÿ™ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿäÿ© ÿ≠ÿ≥ÿ®:
        - ŸÇŸäŸÖÿ© ÿßŸÑÿπŸÇÿßÿ±
        - ŸÖŸàŸÇÿπ ÿßŸÑÿπŸÇÿßÿ±
        - ŸÖÿ≥ÿßÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±
        - ŸÜŸàÿπ ÿßŸÑŸÜÿ¥ÿßÿ∑ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿä
        
        ÿ®ÿ¥ŸÉŸÑ ÿπÿßŸÖÿå ÿ™ÿ™ÿ±ÿßŸàÿ≠ ÿ®ŸäŸÜ 1% ÿ•ŸÑŸâ 3% ŸÖŸÜ ŸÇŸäŸÖÿ© ÿßŸÑÿπŸÇÿßÿ±.
        """)

with tab3:
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("### ‚ÑπÔ∏è ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿπŸÜ ÿßŸÑŸÜÿ∏ÿßŸÖ")
        st.info("""
        **ALIS** ŸáŸà ŸÜÿ∏ÿßŸÖ ÿ∞ŸÉŸä Ÿäÿ≥ÿ™ÿÆÿØŸÖ ÿ™ŸÇŸÜŸäÿ© 
        **ÿßŸÑÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ÿßŸÑŸÖÿπÿ≤ÿ≤ ÿ®ÿßŸÑÿ™ŸàŸÑŸäÿØ (RAG)** 
        ŸÑÿ™ŸÇÿØŸäŸÖ ÿ•ÿ¨ÿßÿ®ÿßÿ™ ÿØŸÇŸäŸÇÿ© ŸàŸÖÿ≠ÿØÿ´ÿ© ÿ≠ŸàŸÑ:
        
        - ÿßŸÑÿ™ÿ¥ÿ±Ÿäÿπÿßÿ™ ÿßŸÑÿ£ÿ±ÿØŸÜŸäÿ©
        - ŸÇŸàÿßŸÜŸäŸÜ ÿßŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑÿπŸÇÿßÿ±ÿßÿ™
        - ÿßŸÑÿ•ÿ¨ÿ±ÿßÿ°ÿßÿ™ ÿßŸÑŸÇÿßŸÜŸàŸÜŸäÿ©
        - ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ©
        
        Ÿäÿπÿ™ŸÖÿØ ÿßŸÑŸÜÿ∏ÿßŸÖ ÿπŸÑŸâ ÿ£ÿ≠ÿØÿ´ ÿ™ŸÇŸÜŸäÿßÿ™ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä
        ŸÑÿ∂ŸÖÿßŸÜ ÿØŸÇÿ© ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ Ÿàÿ≥ŸáŸàŸÑÿ© ÿßŸÑŸàÿµŸàŸÑ ÿ•ŸÑŸäŸáÿß.
        """)
    
    with col2:
        st.markdown("### üìû ÿßÿ™ÿµŸÑ ÿ®ŸÜÿß")
        st.info("""
        ŸÑŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿ£Ÿà ÿßŸÑŸÖÿ≥ÿßÿπÿØÿ© ÿßŸÑÿ™ŸÇŸÜŸäÿ©:
        
        **ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä:** support@alis.gov.jo  
        **Ÿáÿßÿ™ŸÅ:** 065000000  
        **ÿ≥ÿßÿπÿßÿ™ ÿßŸÑÿπŸÖŸÑ:** 8:00 ÿµ - 4:00 ŸÖ  
        **ÿ£ŸäÿßŸÖ ÿßŸÑÿπŸÖŸÑ:** ÿßŸÑÿ£ÿ≠ÿØ - ÿßŸÑÿÆŸÖŸäÿ≥
        """)

# ===== ÿ™ÿ∞ŸäŸäŸÑ ÿßŸÑÿµŸÅÿ≠ÿ© =====
st.markdown("---")
st.markdown("""
    <div class="footer">
        ÿ™ŸÖ ÿ™ÿ∑ŸàŸäÿ± ÿßŸÑŸÜÿ∏ÿßŸÖ ÿ®Ÿàÿßÿ≥ÿ∑ÿ© ŸÖÿ¥ÿ±Ÿàÿπ <strong>ALIS</strong> - ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ŸÑŸÑÿ£ÿ±ÿßÿ∂Ÿä ŸàÿßŸÑŸÖÿ≥ÿßÿ≠ÿ© üáØüá¥<br>
        ÿ¨ŸÖŸäÿπ ÿßŸÑÿ≠ŸÇŸàŸÇ ŸÖÿ≠ŸÅŸàÿ∏ÿ© ¬© 2023
    </div>
""", unsafe_allow_html=True)







